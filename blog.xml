<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>Beneath the surface 🌊</title>
<link>https://luislaum.github.io/home/blog.html</link>
<atom:link href="https://luislaum.github.io/home/blog.xml" rel="self" type="application/rss+xml"/>
<description></description>
<image>
<url>https://luislaum.github.io/home/blog-photo.jpg</url>
<title>Beneath the surface 🌊</title>
<link>https://luislaum.github.io/home/blog.html</link>
</image>
<generator>quarto-1.5.57</generator>
<lastBuildDate>Mon, 21 Oct 2024 00:00:00 GMT</lastBuildDate>
<item>
  <title>Introduction to marbec-data and marbec-gpu</title>
  <link>https://luislaum.github.io/home/blog/marbec-data-gpu-intro/marbec-data-gpu-intro.html</link>
  <description><![CDATA[ 

<p>Image credits: Diego Fernandez at <a href="https://unsplash.com/photos/mixing-console-yRNJAcdpDAo?utm_content=creditShareLink&amp;utm_medium=referral&amp;utm_source=unsplash">Unplash</a></p>
<section id="en-introduction-to-marbec-data-and-marbec-gpu" class="level1">
<h1>[EN] Introduction to <code>marbec-data</code> and <code>marbec-gpu</code></h1>
<section id="what-are-they-are-they-the-same" class="level2">
<h2 data-anchor-id="what-are-they-are-they-the-same">What are they? Are they the same?</h2>
<p>No.&nbsp;<code>marbec-data</code> and <code>marbec-gpu</code> compose a High-performance computing (HPC) system. Basically, it is like having a supercomputer at your disposal to solve complex problems. Imagine that instead of having a single processor (Intel/AMD) working in conjunction with the RAM and storage space of your laptop, you have several computers linked together combining their power (processors, RAM and storage) to run complex processes. This is how HPC works: it uses multiple computers working together to solve very large computations much faster than a single computer could. Within Marbec, <code>marbec-data</code> is a Network File System (NFS) and <code>marbec-gpu</code> is a computing cluster.</p>
<p><strong>An NFS</strong> is a network protocol that allows multiple devices connected to a network to share files and directories. This means that researchers can store their data, codes and outputs as if they were on their own local computer, but with the advantage of having a centralized backup and the ability to access their files from any machine connected to the cluster. In very simple words and going back to the analogy with your laptop, <code>marbec-data</code> takes the place of storage (i.e.&nbsp;hard disk). On the other hand, a <strong>compute cluster</strong> is, in essence, a set of interconnected processors working in a coordinated manner to execute complex computational processes. Within the analogy of your current PC, <code>marbec-gpu</code> equals: your main processor (CPU), your graphics processor (GPU), general RAM and video RAM.</p>
<p>To put it in raw numbers, the current (October 2024) potential of marbec-gpu is:</p>
<ul>
<li>CPU: 4 x <span class="citation" data-cites="2.30GHz">[Intel(R) Xeon(R) Platinum 8380 @2.30GHz, 40 physical cores, 80 logical cores]</span></li>
<li>RAM: 1.5 TB DDR4</li>
<li>GPU: 2 x [NVIDIA A40, 48 GB ECC GDDR6 RAM, 10’752 CUDA cores, 336 tensor cores, 696 GB/s bandwidth]</li>
</ul>
<p>Of course, with these simplifications we are leaving out some important details, but we will go into more detail later as we need them.</p>
</section>
<section id="how-to-access-marbec-data" class="level2">
<h2 data-anchor-id="how-to-access-marbec-data">How to access marbec-data?</h2>
<p>This will depend on what we need to do. If we just want to take a quick look at the files and review aspects of our account, we can open a browser window and go to <a href="https://marbec-data.ird.fr/" class="uri">https://marbec-data.ird.fr/</a>. This will open a login interface where you just need to enter your credentials.</p>
<p><img src="https://luislaum.github.io/home/blog/marbec-data-gpu-intro/images/clipboard-380148957.png" class="img-fluid"></p>
<p>Once inside, we will see a sort of desktop where we will see a couple of icons to access our shared directories and general documentation on the use of the platform.</p>
<p><img src="https://luislaum.github.io/home/blog/marbec-data-gpu-intro/images/clipboard-3953217027.png" class="img-fluid"></p>
<p>We will start, however, by clicking on the user options icon (the one that looks like a little person) at the top right of the desktop and selecting the <strong>Personal</strong> option.</p>
<p><img src="https://luislaum.github.io/home/blog/marbec-data-gpu-intro/images/clipboard-1332799177.png" class="img-fluid"></p>
<p>A small window will open where we will be able to change our password (it is recommended that this is the FIRST thing we do if it is the first time we access), the interface language or desktop image and colors (in the <strong>Display Preferences</strong> tab).</p>
<p><img src="https://luislaum.github.io/home/blog/marbec-data-gpu-intro/images/clipboard-222437051.png" class="img-fluid"></p>
<p>Likewise, in the <strong>Quota</strong> tab we will be able to verify the storage limit assigned to our user and what has been used so far in each of the folders associated to our user. This is a simple and graphic way to visualize the available space we have left. If at any time we need more space, we just need to request it by e-mail to the <code>marbec-data</code> administrators.</p>
<p><img src="https://luislaum.github.io/home/blog/marbec-data-gpu-intro/images/clipboard-2171152553.png" class="img-fluid"></p>
<div class="callout callout-style-default callout-important callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Important
</div>
</div>
<div class="callout-body-container callout-body">
<p>If at any time during the execution of a process the allocated quota limit is reached, the system will block any attempt to save files and this will result in the unplanned termination of the process or errors related to disk write problems.</p>
</div>
</div>
</section>
<section id="how-to-access-marbec-gpu" class="level2">
<h2 data-anchor-id="how-to-access-marbec-gpu">How to access <code>marbec-gpu</code>?</h2>
<p>The easiest way to access <code>marbec-gpu</code> is through a browser using the JupyterLab environment. To do this, just open a browser (Chrome, Firefox, Brave, etc.) window and go to <a href="https://marbec-gpu.ird.fr/" class="uri">https://marbec-gpu.ird.fr/</a>. A window will appear to enter our credentials (NOTE: They are not necessarily the same as those of <code>marbec-data</code>) and then click on the <strong>Start my server</strong> button. Next, a drop-down menu will appear where we will be able to choose different default configurations of computing power for our session.</p>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Note
</div>
</div>
<div class="callout-body-container callout-body">
<p>Although we indicated a moment ago that marbec-gpu has a good amount of CPUs, GPUs and RAM, this represents 100% of its absolute power and <code>marbec-gpu</code> is a shared service, so it is not possible for a single user to monopolize 100% of its capacity. That is why the first choice will consist of deciding what is the power we require for our process. For example, if we want to run an automated process of downloading satellite information, it will be enough to reserve 1 CPU and 2GB of RAM. On the other hand, if our script is only configured (and tested) to use CPU cores, it will not be necessary to reserve those configurations that include GPU. Remember that if you select a very powerful option that you will not take advantage of, it will not be available for someone else who might really need it (choose wisely).</p>
</div>
</div>
<p><img src="https://luislaum.github.io/home/blog/marbec-data-gpu-intro/images/clipboard-1569546190.png" class="img-fluid"></p>
<p>After selecting (and reserving) the resources for our session and clicking <strong>Start</strong>, a window with the JupyterLab Launcher will appear. In it, we will be able to see the different preinstalled and available applications. The main one will be the <strong>Terminal</strong>, which is the one we will use to launch (execute) our processes (scripts).</p>
<p><img src="https://luislaum.github.io/home/blog/marbec-data-gpu-intro/images/clipboard-1563571514.png" class="img-fluid"></p>
<p>We will start by opening a <strong>Terminal</strong> window (by clicking on the corresponding icon) and the first command we will execute will be to change the password. To do this, we will execute the command <code>passwd</code> (and <em>Enter</em>). Next, we will be asked to type our current password and the new one. <strong>WARNING</strong>: by default and for security, during the password change process NO cursor is shown while typing, so it might seem that our keyboard is not working, but this is not the case. You can type normally.</p>
<div class="callout callout-style-default callout-important callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Important
</div>
</div>
<div class="callout-body-container callout-body">
<p>It is very important to define strong passwords (alphanumeric with symbols and uppercase-case) and preferably different passwords for the login in <code>marbec-data</code> and <code>marbec-gpu</code>. On the other hand, the JupyterLab environment DOES allow the use of classic shortcuts like <code>Ctrl+C</code>-<code>Ctrl+V</code> (or <code>Cmd+C</code>-<code>Cmd+V</code> in MacOS) to copy-paste character strings, so it is possible to use them during the password change process with the <code>passwd</code> command.</p>
</div>
</div>
</section>
</section>
<section id="es-introducción-a-marbec-data-y-marbec-gpu" class="level1">
<h1>[ES] Introducción a <code>marbec-data</code> y <code>marbec-gpu</code></h1>
<section id="qué-son-son-lo-mismo" class="level2">
<h2 data-anchor-id="qué-son-son-lo-mismo">¿Qué son? ¿Son lo mismo?</h2>
<p>No.&nbsp;<code>marbec-data</code> y <code>marbec-gpu</code> componen un Sistema de cómputo de alto rendimiento (<em>High-performance computing</em>). (Muy) Básicamente, es como tener una supercomputadora a tu disposición para resolver problemas complejos. Imagina que en lugar de tener un único procesador (Intel/AMD) trabajando en conjunto con la RAM y el espacio de almacenamiento de únicamente tu computadora (e.g.&nbsp;tu laptop), tienes a varias computadoras unidas entre sí combinando su potencia (procesadores, RAM y almacenamiento) para ejecutar los un proceso complejo. Así es como funciona un HPC: utiliza múltiples computadoras trabajando juntas para resolver cálculos muy grandes mucho más rápido de lo que una sola computadora podría hacerlo. Dentro de Marbec, <code>marbec-data</code> es un sistema de almacenamiento distribuido (Network File System, NFS) y <code>marbec-gpu</code>es un clúster de cómputo.</p>
<p>Un NFS es un protocolo de red que permite a múltiples dispositivos conectados a una red compartir archivos y directorios. Esto significa que los investigadores pueden almacenar sus datos, códigos y resultados <em>como si estuvieran en su propio equipo local</em>, pero con la ventaja de tener una copia de seguridad centralizada y la posibilidad de acceder a sus archivos desde cualquier máquina conectada al clúster. En palabras muy simples y volviendo a la analogía con tu actual PC, <code>marbec-data</code> hace las veces del almacenamiento (i.e.&nbsp;del disco duro). Por otro lado, un <strong>clúster de cómputo</strong> es, en esencia, un conjunto de procesadores interconectados que trabajan de forma coordinada para ejecutar procesos computacionales complejos. Dentro de la analogía de tu PC actual, <code>marbec-gpu</code> equivale a: tu procesador principal (CPU), tu procesador de gráficos (GPU), la RAM general y la de vídeo.</p>
<p>Para ponerlo en números brutos, la potencial actual (octubre 2024) de <code>marbec-gpu</code> es de:</p>
<ul>
<li>CPU: 4 x <span class="citation" data-cites="2.30GHz">[Intel(R) Xeon(R) Platinum 8380 @2.30GHz, 40 physical cores, 80 logical cores]</span></li>
<li>RAM: 1.5 TB DDR4</li>
<li>GPU: 2 x [NVIDIA A40, 48 GB ECC GDDR6 RAM, 10’752 CUDA cores, 336 tensor cores, 696 GB/s bandwidth]</li>
</ul>
<p>Por supuesto, con estas simplificaciones estamos obviando algunos detalles importantes, pero que iremos detallando posteriormente conforme los necesitemos.</p>
</section>
<section id="cómo-acceder-a-marbec-data" class="level2">
<h2 data-anchor-id="cómo-acceder-a-marbec-data">¿Cómo acceder a <code>marbec-data</code>?</h2>
<p>Esto dependerá de lo que necesitemos hacer. Si únicamente queremos echar un vistazo rápido a los archivos y revisar aspectos de nuestra cuenta, bastará con abrir una ventana de navegador e ir a la dirección <a href="https://marbec-data.ird.fr/" class="uri">https://marbec-data.ird.fr/</a>. Se abrirá una interfaz de logueo en donde bastará con colocar nuestras credenciales de acceso.</p>
<p><img src="https://luislaum.github.io/home/blog/marbec-data-gpu-intro/images/clipboard-380148957.png" class="img-fluid"></p>
<p>Una vez adentro, veremos una suerte de escritorio en donde se mostrará un par de íconos de acceso a nuestros directorios compartidos y a documentación general de uso de la plataforma.</p>
<p><img src="https://luislaum.github.io/home/blog/marbec-data-gpu-intro/images/clipboard-3953217027.png" class="img-fluid"></p>
<p>Empezaremos, sin embargo, con un click sobre el ícono de opciones de usuario (el que parece una personita) que se halla arriba a la derecha del escritorio y seleccionaremos la opción <strong>Personal</strong>.</p>
<p><img src="https://luislaum.github.io/home/blog/marbec-data-gpu-intro/images/clipboard-1332799177.png" class="img-fluid"></p>
<p>Se abrirá una pequeña ventana en donde podremos cambiar nuestra contraseña (se recomienda que esto sea lo PRIMERO que hagamos si es la primera vez que accedemos), el idioma de la interfaz o la imagen de escritorio y los colores (en la pestañana <strong>Display Preferences</strong>).</p>
<p><img src="https://luislaum.github.io/home/blog/marbec-data-gpu-intro/images/clipboard-222437051.png" class="img-fluid"></p>
<p>Así mismo, en la pestaña <strong>Quota</strong> podremos verificar el límite de almacenamiento asignado a nuestro usuario y lo utilizado hasta el momento en cada una de las carpetas asociadas a nuestro usuario. Esta es una manera sencilla y gráfica de visualizar el espacio disponible que nos queda. Si en algún momento necesitamos de más espacio, basta con solicitarlo por e-mail a los administradores de <code>marbec-data</code>.</p>
<p><img src="https://luislaum.github.io/home/blog/marbec-data-gpu-intro/images/clipboard-2171152553.png" class="img-fluid"></p>
<div class="callout callout-style-default callout-important callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Important
</div>
</div>
<div class="callout-body-container callout-body">
<p>Si en algún momento durante la ejecución de un proceso se alcanza el límite de la cuota asignada, el sistema bloqueará cualquier intento de guardado de archivos y esto dará lugar a la finalización imprevista del proceso o a errores relacionados a problemas de escritura en disco.</p>
</div>
</div>
</section>
<section id="cómo-acceder-a-marbec-gpu" class="level2">
<h2 data-anchor-id="cómo-acceder-a-marbec-gpu">¿Cómo acceder a <code>marbec-gpu</code>?</h2>
<p>La manera más sencilla de acceder a <code>marbec-gpu</code> es a través de un navegador utilizando el entorno de JupyterLab. Para esto, bastará con abrir una ventana de navegador (Chrome, Firefox, Brave, etc.) e ir a la dirección <a href="https://marbec-gpu.ird.fr/" class="uri">https://marbec-gpu.ird.fr/</a>. Se mostrará una ventana para ingresar nuestras credenciales (<strong>OJO: No necesariamente son las mismas que las de <code>marbec-data</code></strong>) y posteriormente daremos click al botón de <strong>Start my server</strong>. A continuación, se mostrará un menú desplegable en donde podremos elegir diferentes configuraciones predeterminadas de potencia de cálculo para nuestra sesión.</p>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Note
</div>
</div>
<div class="callout-body-container callout-body">
<p>Si bien, hace un momento indicamos que <code>marbec-gpu</code> dispone de una buena cantidad CPUs, GPUs y RAM, eso representa el 100% de su potencia absoluta y <code>marbec-gpu</code> es un servicio compartido, por lo que no es posible que un solo usuario pueda acaparar el 100% de su capacidad. Es por ello que la primera elección consistirá en decidir cuál es la potencia que requerimos para nuestro proceso. Por ejemplo, si lo que deseamos es ejecutar un proceso de automatizado de descarga de información satelital, bastará con reservar 1 CPU y 2GB de RAM. De otro modo, si nuestro script solo está configurado (y probado) para utilizar núcleos de CPU, no es necesario reservar aquellas configuraciones que incluyan GPU. Recuerda que si seleccionas una opción muy potente que no aprovecharás, no estará disponible para alguien más que sí podría necesitarla realmente (elige sabiamente).</p>
</div>
</div>
<p><img src="https://luislaum.github.io/home/blog/marbec-data-gpu-intro/images/clipboard-1569546190.png" class="img-fluid"></p>
<p>Luego de haber seleccionado (y reservado) los recursos para nuestra sesión y haberle dado click a <strong>Start</strong>, se nos mostrará una ventana con el Launcher de JupyterLab. En ella, podremos observar los distintos aplicativos preinstalados y disponibles. El principal de todos será el de <strong>Terminal</strong>, que es con el que lanzaremos (ejecutaremos) nuestros procesos (scripts).</p>
<p><img src="https://luislaum.github.io/home/blog/marbec-data-gpu-intro/images/clipboard-1563571514.png" class="img-fluid"></p>
<p>Empezaremos por abrir una ventana de <strong>Terminal</strong> (dándole click al ícono correspondiente) y el primer comando que ejecutaremos será el de cambio de contraseña. Para ello, ejecutaremos el comando <code>passwd</code> (y <em>Enter</em>). A continuación, nos solicitará que escribamos nuestra contraseña actual y la nueva. <strong>OJO: por defecto y por seguridad, durante el proceso de cambio de contraseña NO se muestra ningún cursor mientras se escribe, así que podría parecer que nuestro teclado no está funcionando, pero esto no es así. Usted escriba con normalidad.</strong></p>
<div class="callout callout-style-default callout-important callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Important
</div>
</div>
<div class="callout-body-container callout-body">
<p>Es muy importante que se defina contraseñas seguras (alfanuméricas con símbolos y mayúsculas-minúsculas) y de preferencia distintas para el inicio de sesión en <code>marbec-data</code> y <code>marbec-gpu</code>. Por otro lado, el entorno de JupyterLab SÍ permite el uso de shortcuts clásicos como <code>Ctrl+C</code>-<code>Ctrl+V</code> (o <code>Cmd+C</code>-<code>Cmd+V</code> en MacOS) para copiar-pegar cadenas de carcateres, por lo que es posible utilizarlos durante el proceso de cambio de contraseña con el comando <code>passwd</code>.</p>
</div>
</div>


</section>
</section>
 ]]></description>
  <guid>https://luislaum.github.io/home/blog/marbec-data-gpu-intro/marbec-data-gpu-intro.html</guid>
  <pubDate>Mon, 21 Oct 2024 00:00:00 GMT</pubDate>
  <media:content url="https://luislaum.github.io/home/blog/marbec-data-gpu-intro/banner.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title></title>
  <link>https://luislaum.github.io/home/blog/elnino-app/elnino-app.html</link>
  <description><![CDATA[ undefined ]]></description>
  <guid>https://luislaum.github.io/home/blog/elnino-app/elnino-app.html</guid>
  <pubDate>Sat, 20 Apr 2024 00:00:00 GMT</pubDate>
  <media:content url="https://luislaum.github.io/home/blog/elnino-app/elnino-explain1.png" medium="image" type="image/png" height="288" width="144"/>
</item>
<item>
  <title>Developing Beneath the surface</title>
  <link>https://luislaum.github.io/home/blog/about-this-website/about-this-website.html</link>
  <description><![CDATA[ 

<section id="en-developing-beneath-the-surface" class="level1">
<h1>[EN] Developing ‘Beneath the surface 🌊’</h1>
<section id="the-idea" class="level2">
<h2 data-anchor-id="the-idea">The idea</h2>
<p>The first thing that came to mind was “how can I develop a page that I can leave as a reference for those who want to contact me in a professional setting?” and “through what medium can I share those ideas, small works or personal experiences that I believe could be useful for other professionals in my field?”. Well, there are many options around (social media, podcasts, TikTok, etc.). This first decision was not difficult, as I am not particularly characterized by my charisma on social networks, so I decided to opt for writing a blog. However, here the decision-making process did get a bit complicated, as there are many platforms available: <a href="https://wordpress.com/">Wordpress</a>, <a href="https://www.netlify.com/">Netlify</a>, <a href="https://docs.gitlab.com/ee/user/project/pages/">Gitlab pages</a>, <a href="https://medium.com/">Medium</a>, among <a href="https://stackshare.io/github-pages/alternatives">others</a>. Each one offers different advantages and potential, but my decision was based above all on the familiarity of use of the Github and Quarto platforms. I decided on Github pages.</p>
</section>
<section id="github-pages" class="level2">
<h2 data-anchor-id="github-pages">Github pages</h2>
<p>Github Pages is a free static website hosting service that allows you to publish HTML content directly from a GitHub repository. This platform offers multiple advantages:</p>
<ul>
<li><p><strong>It’s free!</strong>: You don’t need to pay for a web hosting service, just have a (free) GitHub account.</p></li>
<li><p><strong>Easy to use</strong>: Uploading your HTML, CSS, and JavaScript files to GitHub is very simple.</p></li>
<li><p><strong>Direct integration with GitHub</strong>: This becomes VERY important if you already use GitHub (as was my case) for your code projects.</p></li>
<li><p><strong>Versioning</strong>: GitHub Pages keeps a history of all the changes you make to your website, so if something goes wrong you can always go back to a previous version of your repository (page).</p></li>
<li><p><strong>Secure</strong>: GitHub Pages uses HTTPS to protect your website.</p></li>
<li><p><strong>Fast</strong>: For a few years now, Microsoft has bought GitHub and therefore its services use an extensive global network of servers to deliver your website to users around the world.</p></li>
<li><p><strong>Scalable</strong>: GitHub Pages can handle any amount of traffic, so your website can grow smoothly. Although a personal/professional blog is not expected to have very high traffic peaks, it is always good to know that this support exists.</p></li>
<li><p><strong>SEO optimized</strong>: GitHub Pages is optimized for search engines, which will help your website appear in the results of major web search engines.</p></li>
</ul>
<p>In the end, Github pages was the hosting option that I found most attractive. However, there are multiple ways to upload content, from different development platforms that involve the use of programming languages (e.g.&nbsp;Javascript) or markup, such as markdown or Quarto. Once again, my historical experience weighed more and I decided to use Quarto.</p>
</section>
<section id="quarto" class="level2">
<h2 data-anchor-id="quarto">Quarto</h2>
<p>Quarto is an open-source scientific document publishing platform developed by the POSIT (formerly RStudio) team. It is based on the R Markdown format and extends it with new features and functionalities to create richer and more interactive documents. It implements a more powerful preprocessing system than R Markdown and supports additional programming languages such as Python and Julia, expanding the possibilities for analysis and visualization.</p>
<p>For the past few years, I have been using Quarto not only for writing simple R reports, but also for the complete composition of scientific articles (one of them with a format submitted directly from the .docx output obtained in Quarto), as well as the development of interactive websites through the <a href="https://quarto.org/docs/interactive/shiny/">Quarto-Shiny</a> duo.</p>
</section>
<section id="the-content" class="level2">
<h2 data-anchor-id="the-content">The content</h2>
<p>I Didn’t Have to Start from Scratch. Fortunately, there are many resources available online, but I will briefly summarize the main links I used:</p>
<ul>
<li><em>Create the website hosted on Github pages, prepare it for content management with Quarto and to work from RStudio</em>: The first steps to follow are very well explained in the video by Melissa Van Bussel <a href="https://youtu.be/arzBRW5XIkg?feature=shared">(link)</a>. Highly recommended, although it assumes that we know how to handle Git-bash and that we have a token well configured for our PC. I will put these last details at the end of this article.</li>
</ul>
<div class="quarto-video ratio ratio-16x9"><iframe data-external="1" src="https://www.youtube.com/embed/arzBRW5XIkg?feature=shared" title="" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen=""></iframe></div>
<ul>
<li><p><em>Establish an outline of what we are going to publish</em>: Once we have successfully configured our website, it is time to take pen and paper and outline what content we want to share and what the logic will be for organizing that content into sections. While this part is very personal, since it will not be the same to diagram a page that only aims to serve as a professional reference (that is, an interactive resume) to that of a freelancer who wants to show their main projects and/or services offered, you don’t need to start from scratch either. You can review examples of pages from other creators (researchers, reporters, bloggers, graphic artists, etc.) and be inspired by their designs. Also, you can review examples of page structures that use Github pages <a href="https://jekyllthemes.io/free">(link)</a>. Remember, everything must ALWAYS start with the type of content you plan to place.</p></li>
<li><p><em>Start writing</em>: OK, this is not a scientific article and there is much more freedom to fill in the different sections; however, always remember to take into account the basic writing criteria (from general to specific), be clear and careful when choosing the type of language (based on the type of audience you expect to read you) and, once again, review examples. Of course, these days AI text generation platforms can be of great help, but we should not delegate the entire burden (i.e.&nbsp;no copy-paste) to them without first reading and corroborating the information they return to us. At this point, the following articles were very useful to me:</p>
<ul>
<li><p>Create your website with Quarto: complete tutorial and template link: https://www.marvinschmitt.com/blog/website-tutorial-quarto/.</p></li>
<li><p>Creating your personal website with Quarto link: https://ucsb-meds.github.io/creating-quarto-websites/.</p></li>
<li><p>Creating a website link: https://quarto.org/docs/websites/.</p></li>
</ul></li>
<li><p><em>Establish an order</em>: Once we have finished and published a first article, everything will be simpler in technical terms since you will discover that there are multiple reference sources available.</p></li>
</ul>
</section>
</section>
<section id="es-desarrollando-beneath-the-surface" class="level1">
<h1>[ES] Desarrollando ‘Beneath the surface 🌊’</h1>
<section id="la-idea" class="level2">
<h2 data-anchor-id="la-idea">La idea</h2>
<p>Lo primero que llegó a mi mente fue «¿de qué manera puedo desarrollar una página en que pueda dejar como referencia para aquellos que quisieran contactar conmigo en un ambiente profesional?» y «¿desde qué medio puedo compartir aquellas ideas, pequeños trabajos o experiencias personales que creo que podrían resultar de utilidad para otros profesionales en mi rubro?». Bueno, existen muchas opciones alrededor (redes sociales, podcast, TikTok, etc.). Esta primera decisión no fue difícil, pues no me caracterizo particularmente por mi carisma en redes, así que decidí optar por escribir un blog. Sin embargo, aquí la toma de decisiones sí se complicó un poco, pues existen muchas plataformas disponibles: <a href="https://wordpress.com/">Wordpress</a>, <a href="https://www.netlify.com/">Netlify</a>, <a href="https://docs.gitlab.com/ee/user/project/pages/">Gitlab pages</a>, <a href="https://medium.com/">Medium</a>, entre <a href="https://stackshare.io/github-pages/alternatives">others</a>. Cada una plantea ventajas y potencialidades distintas, pero mi decisión se basó sobre todo en la familiaridad de uso de las plataformas <a href="https://github.com/">Github</a> y <a href="https://quarto.org/">Quarto</a>. Me decidí por <a href="https://pages.github.com/">Github pages</a>.</p>
</section>
<section id="github-pages-1" class="level2">
<h2 data-anchor-id="github-pages-1">Github pages</h2>
<p>Github pages es un servicio gratuito de alojamiento de sitios web estáticos que permite publicar contenido HTML directamente desde un repositorio de GitHub. Esta plataforma ofrece múltiples ventajas:</p>
<ul>
<li><p><strong>Gratuito</strong>: No necesitas pagar por un servicio de alojamiento web, solo tener una cuenta de GitHub (gratuita).</p></li>
<li><p><strong>Fácil de usar</strong>: Subir tus archivos HTML, CSS y JavaScript a GitHub es muy sencillo.</p></li>
<li><p><strong>Integración directa con GitHub</strong>: Esto se hace MUY importante si ya usas GitHub (como fue mi caso) para tus proyectos de código.</p></li>
<li><p><strong>Versionado</strong>: GitHub Pages guarda un historial de todos los cambios que realices en tu sitio web, por lo que si algo sale mal siempre puedes volver a una versión anterior de tu repositorio (página).</p></li>
<li><p><strong>Seguro</strong>: GitHub Pages utiliza HTTPS para proteger tu sitio web.</p></li>
<li><p><strong>Rápido</strong>: Desde hace unos años, Microsoft compró GitHub y por tanto sus servicios utilizan una extensa red global de servidores para entregar tu sitio web a los usuarios de todo el mundo.</p></li>
<li><p><strong>Escalable</strong>: GitHub Pages puede manejar cualquier cantidad de tráfico, por lo que tu sitio web puede crecer sin problemas. Aunque de un blog personal/profesional no se espera tener picos de tráfico muy altos, siempre es bueno saber que existe este respaldo.</p></li>
<li><p><strong>Optimizado para SEO</strong>: GitHub Pages está optimizado para los motores de búsqueda, lo que ayudará a que nuestro sitio web aparezca en los resultados de los principales buscadores web.</p></li>
</ul>
<p>Al final, Github pages fue la opción de alojamiento que me resultó más atractiva. Sin embargo, existen múltiples maneras de subir contenido, desde diferentes plataformas de desarrollo que involucran el uso de lenguajes de programación (e.g.&nbsp;Javascript) o de marcado, como markdown o Quarto. Una vez más, mi experiencia histórica pesó más y me decanté por el uso de Quarto.</p>
</section>
<section id="quarto-1" class="level2">
<h2 data-anchor-id="quarto-1">Quarto</h2>
<p>Quarto es una plataforma de publicación de documentos científicos de código abierto desarrollada por el equipo de POSIT (ex RStudio). Se basa en el formato R Markdown y lo amplía con nuevas características y funcionalidades para crear documentos más ricos e interactivos. Implementa un sistema de preprocesamiento más potente que R Markdown y soporta lenguajes de programación adicionales como Python y Julia, ampliando las posibilidades de análisis y visualización.</p>
<p>Desde hace unos pocos años, he venido utilizando Quarto no solo para la redacción de reportes sencillos en R, sino inclusive para la composición completa de artículos científicos (uno de ellos con formato sometido directamente desde la salida en .docx obtenida en Quarto), así como el desarrollo de webs interactivas a través de la dupla <a href="https://quarto.org/docs/interactive/shiny/">Quarto-Shiny</a>.</p>
</section>
<section id="el-contenido" class="level2">
<h2 data-anchor-id="el-contenido">El contenido</h2>
<p>No tuve que empezar desde cero. Afortunadamente, hay mucho material allá afuera, pero resumiré brevemente los principales links que utilicé:</p>
<ul>
<li>Crear la website alojada en Github pages, preparaela para el manejo de contenido con Quarto y para trabajar desde RStudio: Los primeros pasos a seguir están muy bien explicados en el vídeo de Melissa Van Bussel <a href="https://youtu.be/arzBRW5XIkg?feature=shared">(link)</a>. Muy recomendable, aunque parte bajo el supuesto de que conocemos cómo manejar Git-bash y de que tenemos bien configurado un token para nuestra PC. Estos últimos detalles los colocaré al final de este artículo.</li>
</ul>
<div class="quarto-video ratio ratio-16x9"><iframe data-external="1" src="https://www.youtube.com/embed/arzBRW5XIkg?feature=shared" title="" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen=""></iframe></div>
<ul>
<li><p>Establecer un esquema de lo que vamos a publicar. Una vez que hayamos logrado configurar correctamente nuestra web, sigue el turno de tomar lápiz y papel y esquematizar qué contenido deseamos compartir y cuál será la lógica para ordenar dicho contenido en secciones. Si bien esta parte es muy personal, ya que no será lo mismo diagramar una página que solo tiene como objetivo servir de referencia profesional (es decir, un CV interactivo) a la de un <strong>freelancer</strong> que desea mostrar sus principales proyectos y/o servicios ofrecidos, no necesitas ir desde cero tampoco. Puedes revisar ejemplos de páginas de otros creadores (investigadores, reporteros, bloggers, artistas gráficos, etc.) e inspirarte en sus diseños. Así también, puedes revisar ejemplos de estructuras de páginas que usan Github pages <a href="https://jekyllthemes.io/free">(link)</a>. Recuerda, todo debe partir SIEMPRE del tipo de contenido que planeas colocar.</p></li>
<li><p>Empezar a escribir. OK, esto no es un artículo científico y hay mucha más libertad para rellenar las distintas secciones; no obstante, recuerda siempre tener en cuenta los criterios básicos de redacción (de lo general a lo específico), ser claro y cuidadoso al elegir el tipo de lenguaje (con base en el tipo de público que esperas que te lea) y, una vez más, revisar ejemplos. Por supuesto, en estos días las plataformas de IA para generación de texto pueden resultar de gran ayuda, pero no debemos delegarles toda la carga (i.e.&nbsp;nada de copiar-pegar) sin antes leer corroborar la información que nos devuelven. En este punto, me fueron de mucha utilidad los siguientes artículos:</p>
<ul>
<li><p>Crear tu website con Quarto: tutorial completo y plantilla <a href="https://www.marvinschmitt.com/blog/website-tutorial-quarto/">link</a>.</p></li>
<li><p>Creando tu website personal con Quarto <a href="https://ucsb-meds.github.io/creating-quarto-websites/">link</a>.</p></li>
<li><p>Creando un website <a href="https://quarto.org/docs/websites/">link</a>.</p></li>
</ul></li>
<li><p>Establecer un orden. Una vez que hayamos culminado y publicado un primer artículo, todo irá siendo más simple en términos técnicos ya que descubrirás que existen múltiples fuentes de referencia disponibles.</p></li>
</ul>


</section>
</section>
 ]]></description>
  <guid>https://luislaum.github.io/home/blog/about-this-website/about-this-website.html</guid>
  <pubDate>Fri, 19 Apr 2024 00:00:00 GMT</pubDate>
  <media:content url="https://luislaum.github.io/home/blog/about-this-website/banner.png" medium="image" type="image/png" height="77" width="144"/>
</item>
</channel>
</rss>
