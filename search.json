[
  {
    "objectID": "blog.html",
    "href": "blog.html",
    "title": "Blog",
    "section": "",
    "text": "EN: Here I will be depositing several articles of very diverse topics.\nES: Aquí iré depositando contenido sobre temas muy diversos.\nImage credits: Siora Photography at Unplash\n\n\n\n\n\n\n\n\n\n\n\n\nIntroduction to marbec-data and marbec-gpu\n\n\nWhat they are and how to access? | ¿Qué son y cómo acceder a ellos?\n\n\n\n\n\nOct 21, 2024\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nEl Niño\n\n\nCurrent conditions for the Peruvian coast. | Condiciones actuales para la costa peruana.\n\n\n\n\n\nApr 20, 2024\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nDeveloping Beneath the surface\n\n\nCómo fui desarrollando esta página\n\n\n\n\n\nApr 19, 2024\n\n\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About me",
    "section": "",
    "text": "EN\nMy full name is Luis Wencheng Lau-Medrano, I am Peruvian by birth and a passionate (geek) about technology, marine biology, data analysis, Legos and travel. Since I was a child, I have been fascinated by the digital world and biology, so when I became an adult, I decided to combine both passions to solve problems and improve people’s lives (and my own, which I am working on).\nIn my professional career, I complete my bachelor as biologist with a specialization in Hydrobiology at the UNMSM (Lima-Peru), then I continued with a Master’s degree in Marine Sciences at the UPCH (Lima-Peru). Currently, I am finishing a doctorate in ecology at the University of Montpellier-UM (France) with an IRD scholarship.\nI have worked as a researcher at the Instituto del Mar del Perú-IMARPE, in the General Directorate of Pelagic Resources Research and in the General Directorate of Demersal and Littoral Resources Research. My main tasks were the statistical analysis of fishery information and research cruises for decision-making and management of the anchovy (Engraulis ringens), jack mackerel (Trachurus murphyi), mackerel (Scomber japonicus), hake (Merluccius gayi peruanus) and giant squid (Dosidicus gigas). Additionally, I have done two internships: one at the University of Washington-UW for the standardization of the CPUE of two shark species using the VAST tool, and another at the UM supporting the calibration of the OSMOSE model for the Peruvian Upwelling Ecosystem. I have experience as a speaker at international congresses held in Lima-Peru, La Paz-Mexico, Victoria-Canada and Palma de Mallorca-Spain.\nI have also experience teaching programming and data management courses and I am the creator and developer of the packages in CRAN imagine and grec.\nHobbies? Of course! Video games, building Legos, biking, traveling, taking pictures of natural and urban landscapes and programming (yes, also as a hobbie).\n\n\nES\nMi nombre completo es Luis Wencheng Lau-Medrano, soy peruano de nacimiento y un apasionado de la tecnología (un geek quizás), la biología marina, el análisis de datos, los Legos y los viajes. Desde siempre me ha fascinado el mundo digital y la biología, por lo que llegado el momento de ser adulto decidí combinar ambas pasiones para resolver problemas y mejorar la vida de las personas (y la mía propia, en ello trabajo).\nMi formación profesional inicial es de biólogo con mención en Hidrobiología en la UNMSM (Lima-Perú), luego continué con una Maestría en Ciencias del Mar en la UPCH (Lima-Perú). Actualmente, vengo finalizando un doctorado en ecología en la Universidad de Montpellier-UM (Francia) con el apoyo de una beca IRD.\nHe trabajado como investigador en el Instituto del Mar del Perú-IMARPE, en la Dirección General de Investigaciones de Recursos Pelágicos y en la Dirección General de Investigaciones de Recursos Demersales y Litorales. Mis labores principales fueron el análisis estadístico de información de pesquería y cruceros de investigación para la toma de decisiones y manejo de los recursos anchoveta (Engraulis ringens), jurel (Trachurus murphyi), caballa (Scomber japonicus), merluza (Merluccius gayi peruanus) y pota (Dosidicus gigas). Adicionalmente, he realizado dos pasantías: una en la Universidad de Washington-UW para la estandarización de la CPUE de dos especies de tiburones usando la herramienta VAST, y otra en la UM apoyando con la calibración del modelo OSMOSE para el Ecosistema de Afloramiento Peruano. Tengo experiencia como expositor en congresos internacionales realizados en Lima-Perú, La Paz-México, Victoria-Canadá y Palma de Mayorca-España.\nTambién tengo experiencia docente cursos de programación y manejo de datos y soy creador y desarrollador de los paquetes en CRAN imagine y grec.\n¿Hobbies? ¡Por supuesto! Juegos de video, armar Legos, pasear en bicicleta, viajar, tomar fotos de paisajes naturales y urbanos y programar (sí, también como hobbie)."
  },
  {
    "objectID": "blog/marbec-data-gpu-intro/marbec-data-gpu-intro.html",
    "href": "blog/marbec-data-gpu-intro/marbec-data-gpu-intro.html",
    "title": "Introduction to marbec-data and marbec-gpu",
    "section": "",
    "text": "Image credits: Diego Fernandez at Unplash"
  },
  {
    "objectID": "blog/marbec-data-gpu-intro/marbec-data-gpu-intro.html#what-are-they-are-they-the-same",
    "href": "blog/marbec-data-gpu-intro/marbec-data-gpu-intro.html#what-are-they-are-they-the-same",
    "title": "Introduction to marbec-data and marbec-gpu",
    "section": "What are they? Are they the same?",
    "text": "What are they? Are they the same?\nNo. marbec-data and marbec-gpu compose a High-performance computing (HPC) system. Basically, it is like having a supercomputer at your disposal to solve complex problems. Imagine that instead of having a single processor (Intel/AMD) working in conjunction with the RAM and storage space of your laptop, you have several computers linked together combining their power (processors, RAM and storage) to run complex processes. This is how HPC works: it uses multiple computers working together to solve very large computations much faster than a single computer could. Within Marbec, marbec-data is a Network File System (NFS) and marbec-gpu is a computing cluster.\nAn NFS is a network protocol that allows multiple devices connected to a network to share files and directories. This means that researchers can store their data, codes and outputs as if they were on their own local computer, but with the advantage of having a centralized backup and the ability to access their files from any machine connected to the cluster. In very simple words and going back to the analogy with your laptop, marbec-data takes the place of storage (i.e. hard disk). On the other hand, a compute cluster is, in essence, a set of interconnected processors working in a coordinated manner to execute complex computational processes. Within the analogy of your current PC, marbec-gpu equals: your main processor (CPU), your graphics processor (GPU), general RAM and video RAM.\nTo put it in raw numbers, the current (October 2024) potential of marbec-gpu is:\n\nCPU: 4 x [Intel(R) Xeon(R) Platinum 8380 @2.30GHz, 40 physical cores, 80 logical cores]\nRAM: 1.5 TB DDR4\nGPU: 2 x [NVIDIA A40, 48 GB ECC GDDR6 RAM, 10’752 CUDA cores, 336 tensor cores, 696 GB/s bandwidth]\n\nOf course, with these simplifications we are leaving out some important details, but we will go into more detail later as we need them."
  },
  {
    "objectID": "blog/marbec-data-gpu-intro/marbec-data-gpu-intro.html#how-to-access-marbec-data",
    "href": "blog/marbec-data-gpu-intro/marbec-data-gpu-intro.html#how-to-access-marbec-data",
    "title": "Introduction to marbec-data and marbec-gpu",
    "section": "How to access marbec-data?",
    "text": "How to access marbec-data?\nThis will depend on what we need to do. If we just want to take a quick look at the files and review aspects of our account, we can open a browser window and go to https://marbec-data.ird.fr/. This will open a login interface where you just need to enter your credentials.\n\nOnce inside, we will see a sort of desktop where we will see a couple of icons to access our shared directories and general documentation on the use of the platform.\n\nWe will start, however, by clicking on the user options icon (the one that looks like a little person) at the top right of the desktop and selecting the Personal option.\n\nA small window will open where we will be able to change our password (it is recommended that this is the FIRST thing we do if it is the first time we access), the interface language or desktop image and colors (in the Display Preferences tab).\n\nLikewise, in the Quota tab we will be able to verify the storage limit assigned to our user and what has been used so far in each of the folders associated to our user. This is a simple and graphic way to visualize the available space we have left. If at any time we need more space, we just need to request it by e-mail to the marbec-data administrators.\n\n\n\n\n\n\n\nImportant\n\n\n\nIf at any time during the execution of a process the allocated quota limit is reached, the system will block any attempt to save files and this will result in the unplanned termination of the process or errors related to disk write problems."
  },
  {
    "objectID": "blog/marbec-data-gpu-intro/marbec-data-gpu-intro.html#how-to-access-marbec-gpu",
    "href": "blog/marbec-data-gpu-intro/marbec-data-gpu-intro.html#how-to-access-marbec-gpu",
    "title": "Introduction to marbec-data and marbec-gpu",
    "section": "How to access marbec-gpu?",
    "text": "How to access marbec-gpu?\nThe easiest way to access marbec-gpu is through a browser using the JupyterLab environment. To do this, just open a browser (Chrome, Firefox, Brave, etc.) window and go to https://marbec-gpu.ird.fr/. A window will appear to enter our credentials (NOTE: They are not necessarily the same as those of marbec-data) and then click on the Start my server button. Next, a drop-down menu will appear where we will be able to choose different default configurations of computing power for our session.\n\n\n\n\n\n\nNote\n\n\n\nAlthough we indicated a moment ago that marbec-gpu has a good amount of CPUs, GPUs and RAM, this represents 100% of its absolute power and marbec-gpu is a shared service, so it is not possible for a single user to monopolize 100% of its capacity. That is why the first choice will consist of deciding what is the power we require for our process. For example, if we want to run an automated process of downloading satellite information, it will be enough to reserve 1 CPU and 2GB of RAM. On the other hand, if our script is only configured (and tested) to use CPU cores, it will not be necessary to reserve those configurations that include GPU. Remember that if you select a very powerful option that you will not take advantage of, it will not be available for someone else who might really need it (choose wisely).\n\n\n\nAfter selecting (and reserving) the resources for our session and clicking Start, a window with the JupyterLab Launcher will appear. In it, we will be able to see the different preinstalled and available applications. The main one will be the Terminal, which is the one we will use to launch (execute) our processes (scripts).\n\nWe will start by opening a Terminal window (by clicking on the corresponding icon) and the first command we will execute will be to change the password. To do this, we will execute the command passwd (and Enter). Next, we will be asked to type our current password and the new one. WARNING: by default and for security, during the password change process NO cursor is shown while typing, so it might seem that our keyboard is not working, but this is not the case. You can type normally.\n\n\n\n\n\n\nImportant\n\n\n\nIt is very important to define strong passwords (alphanumeric with symbols and uppercase-case) and preferably different passwords for the login in marbec-data and marbec-gpu. On the other hand, the JupyterLab environment DOES allow the use of classic shortcuts like Ctrl+C-Ctrl+V (or Cmd+C-Cmd+V in MacOS) to copy-paste character strings, so it is possible to use them during the password change process with the passwd command."
  },
  {
    "objectID": "blog/marbec-data-gpu-intro/marbec-data-gpu-intro.html#qué-son-son-lo-mismo",
    "href": "blog/marbec-data-gpu-intro/marbec-data-gpu-intro.html#qué-son-son-lo-mismo",
    "title": "Introduction to marbec-data and marbec-gpu",
    "section": "¿Qué son? ¿Son lo mismo?",
    "text": "¿Qué son? ¿Son lo mismo?\nNo. marbec-data y marbec-gpu componen un Sistema de cómputo de alto rendimiento (High-performance computing). (Muy) Básicamente, es como tener una supercomputadora a tu disposición para resolver problemas complejos. Imagina que en lugar de tener un único procesador (Intel/AMD) trabajando en conjunto con la RAM y el espacio de almacenamiento de únicamente tu computadora (e.g. tu laptop), tienes a varias computadoras unidas entre sí combinando su potencia (procesadores, RAM y almacenamiento) para ejecutar los un proceso complejo. Así es como funciona un HPC: utiliza múltiples computadoras trabajando juntas para resolver cálculos muy grandes mucho más rápido de lo que una sola computadora podría hacerlo. Dentro de Marbec, marbec-data es un sistema de almacenamiento distribuido (Network File System, NFS) y marbec-gpues un clúster de cómputo.\nUn NFS es un protocolo de red que permite a múltiples dispositivos conectados a una red compartir archivos y directorios. Esto significa que los investigadores pueden almacenar sus datos, códigos y resultados como si estuvieran en su propio equipo local, pero con la ventaja de tener una copia de seguridad centralizada y la posibilidad de acceder a sus archivos desde cualquier máquina conectada al clúster. En palabras muy simples y volviendo a la analogía con tu actual PC, marbec-data hace las veces del almacenamiento (i.e. del disco duro). Por otro lado, un clúster de cómputo es, en esencia, un conjunto de procesadores interconectados que trabajan de forma coordinada para ejecutar procesos computacionales complejos. Dentro de la analogía de tu PC actual, marbec-gpu equivale a: tu procesador principal (CPU), tu procesador de gráficos (GPU), la RAM general y la de vídeo.\nPara ponerlo en números brutos, la potencial actual (octubre 2024) de marbec-gpu es de:\n\nCPU: 4 x [Intel(R) Xeon(R) Platinum 8380 @2.30GHz, 40 physical cores, 80 logical cores]\nRAM: 1.5 TB DDR4\nGPU: 2 x [NVIDIA A40, 48 GB ECC GDDR6 RAM, 10’752 CUDA cores, 336 tensor cores, 696 GB/s bandwidth]\n\nPor supuesto, con estas simplificaciones estamos obviando algunos detalles importantes, pero que iremos detallando posteriormente conforme los necesitemos."
  },
  {
    "objectID": "blog/marbec-data-gpu-intro/marbec-data-gpu-intro.html#cómo-acceder-a-marbec-data",
    "href": "blog/marbec-data-gpu-intro/marbec-data-gpu-intro.html#cómo-acceder-a-marbec-data",
    "title": "Introduction to marbec-data and marbec-gpu",
    "section": "¿Cómo acceder a marbec-data?",
    "text": "¿Cómo acceder a marbec-data?\nEsto dependerá de lo que necesitemos hacer. Si únicamente queremos echar un vistazo rápido a los archivos y revisar aspectos de nuestra cuenta, bastará con abrir una ventana de navegador e ir a la dirección https://marbec-data.ird.fr/. Se abrirá una interfaz de logueo en donde bastará con colocar nuestras credenciales de acceso.\n\nUna vez adentro, veremos una suerte de escritorio en donde se mostrará un par de íconos de acceso a nuestros directorios compartidos y a documentación general de uso de la plataforma.\n\nEmpezaremos, sin embargo, con un click sobre el ícono de opciones de usuario (el que parece una personita) que se halla arriba a la derecha del escritorio y seleccionaremos la opción Personal.\n\nSe abrirá una pequeña ventana en donde podremos cambiar nuestra contraseña (se recomienda que esto sea lo PRIMERO que hagamos si es la primera vez que accedemos), el idioma de la interfaz o la imagen de escritorio y los colores (en la pestañana Display Preferences).\n\nAsí mismo, en la pestaña Quota podremos verificar el límite de almacenamiento asignado a nuestro usuario y lo utilizado hasta el momento en cada una de las carpetas asociadas a nuestro usuario. Esta es una manera sencilla y gráfica de visualizar el espacio disponible que nos queda. Si en algún momento necesitamos de más espacio, basta con solicitarlo por e-mail a los administradores de marbec-data.\n\n\n\n\n\n\n\nImportant\n\n\n\nSi en algún momento durante la ejecución de un proceso se alcanza el límite de la cuota asignada, el sistema bloqueará cualquier intento de guardado de archivos y esto dará lugar a la finalización imprevista del proceso o a errores relacionados a problemas de escritura en disco."
  },
  {
    "objectID": "blog/marbec-data-gpu-intro/marbec-data-gpu-intro.html#cómo-acceder-a-marbec-gpu",
    "href": "blog/marbec-data-gpu-intro/marbec-data-gpu-intro.html#cómo-acceder-a-marbec-gpu",
    "title": "Introduction to marbec-data and marbec-gpu",
    "section": "¿Cómo acceder a marbec-gpu?",
    "text": "¿Cómo acceder a marbec-gpu?\nLa manera más sencilla de acceder a marbec-gpu es a través de un navegador utilizando el entorno de JupyterLab. Para esto, bastará con abrir una ventana de navegador (Chrome, Firefox, Brave, etc.) e ir a la dirección https://marbec-gpu.ird.fr/. Se mostrará una ventana para ingresar nuestras credenciales (OJO: No necesariamente son las mismas que las de marbec-data) y posteriormente daremos click al botón de Start my server. A continuación, se mostrará un menú desplegable en donde podremos elegir diferentes configuraciones predeterminadas de potencia de cálculo para nuestra sesión.\n\n\n\n\n\n\nNote\n\n\n\nSi bien, hace un momento indicamos que marbec-gpu dispone de una buena cantidad CPUs, GPUs y RAM, eso representa el 100% de su potencia absoluta y marbec-gpu es un servicio compartido, por lo que no es posible que un solo usuario pueda acaparar el 100% de su capacidad. Es por ello que la primera elección consistirá en decidir cuál es la potencia que requerimos para nuestro proceso. Por ejemplo, si lo que deseamos es ejecutar un proceso de automatizado de descarga de información satelital, bastará con reservar 1 CPU y 2GB de RAM. De otro modo, si nuestro script solo está configurado (y probado) para utilizar núcleos de CPU, no es necesario reservar aquellas configuraciones que incluyan GPU. Recuerda que si seleccionas una opción muy potente que no aprovecharás, no estará disponible para alguien más que sí podría necesitarla realmente (elige sabiamente).\n\n\n\nLuego de haber seleccionado (y reservado) los recursos para nuestra sesión y haberle dado click a Start, se nos mostrará una ventana con el Launcher de JupyterLab. En ella, podremos observar los distintos aplicativos preinstalados y disponibles. El principal de todos será el de Terminal, que es con el que lanzaremos (ejecutaremos) nuestros procesos (scripts).\n\nEmpezaremos por abrir una ventana de Terminal (dándole click al ícono correspondiente) y el primer comando que ejecutaremos será el de cambio de contraseña. Para ello, ejecutaremos el comando passwd (y Enter). A continuación, nos solicitará que escribamos nuestra contraseña actual y la nueva. OJO: por defecto y por seguridad, durante el proceso de cambio de contraseña NO se muestra ningún cursor mientras se escribe, así que podría parecer que nuestro teclado no está funcionando, pero esto no es así. Usted escriba con normalidad.\n\n\n\n\n\n\nImportant\n\n\n\nEs muy importante que se defina contraseñas seguras (alfanuméricas con símbolos y mayúsculas-minúsculas) y de preferencia distintas para el inicio de sesión en marbec-data y marbec-gpu. Por otro lado, el entorno de JupyterLab SÍ permite el uso de shortcuts clásicos como Ctrl+C-Ctrl+V (o Cmd+C-Cmd+V en MacOS) para copiar-pegar cadenas de carcateres, por lo que es posible utilizarlos durante el proceso de cambio de contraseña con el comando passwd."
  },
  {
    "objectID": "blog/about-this-website/about-this-website.html",
    "href": "blog/about-this-website/about-this-website.html",
    "title": "Developing Beneath the surface",
    "section": "",
    "text": "The first thing that came to mind was “how can I develop a page that I can leave as a reference for those who want to contact me in a professional setting?” and “through what medium can I share those ideas, small works or personal experiences that I believe could be useful for other professionals in my field?”. Well, there are many options around (social media, podcasts, TikTok, etc.). This first decision was not difficult, as I am not particularly characterized by my charisma on social networks, so I decided to opt for writing a blog. However, here the decision-making process did get a bit complicated, as there are many platforms available: Wordpress, Netlify, Gitlab pages, Medium, among others. Each one offers different advantages and potential, but my decision was based above all on the familiarity of use of the Github and Quarto platforms. I decided on Github pages.\n\n\n\nGithub Pages is a free static website hosting service that allows you to publish HTML content directly from a GitHub repository. This platform offers multiple advantages:\n\nIt’s free!: You don’t need to pay for a web hosting service, just have a (free) GitHub account.\nEasy to use: Uploading your HTML, CSS, and JavaScript files to GitHub is very simple.\nDirect integration with GitHub: This becomes VERY important if you already use GitHub (as was my case) for your code projects.\nVersioning: GitHub Pages keeps a history of all the changes you make to your website, so if something goes wrong you can always go back to a previous version of your repository (page).\nSecure: GitHub Pages uses HTTPS to protect your website.\nFast: For a few years now, Microsoft has bought GitHub and therefore its services use an extensive global network of servers to deliver your website to users around the world.\nScalable: GitHub Pages can handle any amount of traffic, so your website can grow smoothly. Although a personal/professional blog is not expected to have very high traffic peaks, it is always good to know that this support exists.\nSEO optimized: GitHub Pages is optimized for search engines, which will help your website appear in the results of major web search engines.\n\nIn the end, Github pages was the hosting option that I found most attractive. However, there are multiple ways to upload content, from different development platforms that involve the use of programming languages (e.g. Javascript) or markup, such as markdown or Quarto. Once again, my historical experience weighed more and I decided to use Quarto.\n\n\n\nQuarto is an open-source scientific document publishing platform developed by the POSIT (formerly RStudio) team. It is based on the R Markdown format and extends it with new features and functionalities to create richer and more interactive documents. It implements a more powerful preprocessing system than R Markdown and supports additional programming languages such as Python and Julia, expanding the possibilities for analysis and visualization.\nFor the past few years, I have been using Quarto not only for writing simple R reports, but also for the complete composition of scientific articles (one of them with a format submitted directly from the .docx output obtained in Quarto), as well as the development of interactive websites through the Quarto-Shiny duo.\n\n\n\nI Didn’t Have to Start from Scratch. Fortunately, there are many resources available online, but I will briefly summarize the main links I used:\n\nCreate the website hosted on Github pages, prepare it for content management with Quarto and to work from RStudio: The first steps to follow are very well explained in the video by Melissa Van Bussel (link). Highly recommended, although it assumes that we know how to handle Git-bash and that we have a token well configured for our PC. I will put these last details at the end of this article.\n\n\n\nEstablish an outline of what we are going to publish: Once we have successfully configured our website, it is time to take pen and paper and outline what content we want to share and what the logic will be for organizing that content into sections. While this part is very personal, since it will not be the same to diagram a page that only aims to serve as a professional reference (that is, an interactive resume) to that of a freelancer who wants to show their main projects and/or services offered, you don’t need to start from scratch either. You can review examples of pages from other creators (researchers, reporters, bloggers, graphic artists, etc.) and be inspired by their designs. Also, you can review examples of page structures that use Github pages (link). Remember, everything must ALWAYS start with the type of content you plan to place.\nStart writing: OK, this is not a scientific article and there is much more freedom to fill in the different sections; however, always remember to take into account the basic writing criteria (from general to specific), be clear and careful when choosing the type of language (based on the type of audience you expect to read you) and, once again, review examples. Of course, these days AI text generation platforms can be of great help, but we should not delegate the entire burden (i.e. no copy-paste) to them without first reading and corroborating the information they return to us. At this point, the following articles were very useful to me:\n\nCreate your website with Quarto: complete tutorial and template link: https://www.marvinschmitt.com/blog/website-tutorial-quarto/.\nCreating your personal website with Quarto link: https://ucsb-meds.github.io/creating-quarto-websites/.\nCreating a website link: https://quarto.org/docs/websites/.\n\nEstablish an order: Once we have finished and published a first article, everything will be simpler in technical terms since you will discover that there are multiple reference sources available."
  },
  {
    "objectID": "blog/about-this-website/about-this-website.html#the-idea",
    "href": "blog/about-this-website/about-this-website.html#the-idea",
    "title": "Developing Beneath the surface",
    "section": "",
    "text": "The first thing that came to mind was “how can I develop a page that I can leave as a reference for those who want to contact me in a professional setting?” and “through what medium can I share those ideas, small works or personal experiences that I believe could be useful for other professionals in my field?”. Well, there are many options around (social media, podcasts, TikTok, etc.). This first decision was not difficult, as I am not particularly characterized by my charisma on social networks, so I decided to opt for writing a blog. However, here the decision-making process did get a bit complicated, as there are many platforms available: Wordpress, Netlify, Gitlab pages, Medium, among others. Each one offers different advantages and potential, but my decision was based above all on the familiarity of use of the Github and Quarto platforms. I decided on Github pages."
  },
  {
    "objectID": "blog/about-this-website/about-this-website.html#github-pages",
    "href": "blog/about-this-website/about-this-website.html#github-pages",
    "title": "Developing Beneath the surface",
    "section": "",
    "text": "Github Pages is a free static website hosting service that allows you to publish HTML content directly from a GitHub repository. This platform offers multiple advantages:\n\nIt’s free!: You don’t need to pay for a web hosting service, just have a (free) GitHub account.\nEasy to use: Uploading your HTML, CSS, and JavaScript files to GitHub is very simple.\nDirect integration with GitHub: This becomes VERY important if you already use GitHub (as was my case) for your code projects.\nVersioning: GitHub Pages keeps a history of all the changes you make to your website, so if something goes wrong you can always go back to a previous version of your repository (page).\nSecure: GitHub Pages uses HTTPS to protect your website.\nFast: For a few years now, Microsoft has bought GitHub and therefore its services use an extensive global network of servers to deliver your website to users around the world.\nScalable: GitHub Pages can handle any amount of traffic, so your website can grow smoothly. Although a personal/professional blog is not expected to have very high traffic peaks, it is always good to know that this support exists.\nSEO optimized: GitHub Pages is optimized for search engines, which will help your website appear in the results of major web search engines.\n\nIn the end, Github pages was the hosting option that I found most attractive. However, there are multiple ways to upload content, from different development platforms that involve the use of programming languages (e.g. Javascript) or markup, such as markdown or Quarto. Once again, my historical experience weighed more and I decided to use Quarto."
  },
  {
    "objectID": "blog/about-this-website/about-this-website.html#quarto",
    "href": "blog/about-this-website/about-this-website.html#quarto",
    "title": "Developing Beneath the surface",
    "section": "",
    "text": "Quarto is an open-source scientific document publishing platform developed by the POSIT (formerly RStudio) team. It is based on the R Markdown format and extends it with new features and functionalities to create richer and more interactive documents. It implements a more powerful preprocessing system than R Markdown and supports additional programming languages such as Python and Julia, expanding the possibilities for analysis and visualization.\nFor the past few years, I have been using Quarto not only for writing simple R reports, but also for the complete composition of scientific articles (one of them with a format submitted directly from the .docx output obtained in Quarto), as well as the development of interactive websites through the Quarto-Shiny duo."
  },
  {
    "objectID": "blog/about-this-website/about-this-website.html#the-content",
    "href": "blog/about-this-website/about-this-website.html#the-content",
    "title": "Developing Beneath the surface",
    "section": "",
    "text": "I Didn’t Have to Start from Scratch. Fortunately, there are many resources available online, but I will briefly summarize the main links I used:\n\nCreate the website hosted on Github pages, prepare it for content management with Quarto and to work from RStudio: The first steps to follow are very well explained in the video by Melissa Van Bussel (link). Highly recommended, although it assumes that we know how to handle Git-bash and that we have a token well configured for our PC. I will put these last details at the end of this article.\n\n\n\nEstablish an outline of what we are going to publish: Once we have successfully configured our website, it is time to take pen and paper and outline what content we want to share and what the logic will be for organizing that content into sections. While this part is very personal, since it will not be the same to diagram a page that only aims to serve as a professional reference (that is, an interactive resume) to that of a freelancer who wants to show their main projects and/or services offered, you don’t need to start from scratch either. You can review examples of pages from other creators (researchers, reporters, bloggers, graphic artists, etc.) and be inspired by their designs. Also, you can review examples of page structures that use Github pages (link). Remember, everything must ALWAYS start with the type of content you plan to place.\nStart writing: OK, this is not a scientific article and there is much more freedom to fill in the different sections; however, always remember to take into account the basic writing criteria (from general to specific), be clear and careful when choosing the type of language (based on the type of audience you expect to read you) and, once again, review examples. Of course, these days AI text generation platforms can be of great help, but we should not delegate the entire burden (i.e. no copy-paste) to them without first reading and corroborating the information they return to us. At this point, the following articles were very useful to me:\n\nCreate your website with Quarto: complete tutorial and template link: https://www.marvinschmitt.com/blog/website-tutorial-quarto/.\nCreating your personal website with Quarto link: https://ucsb-meds.github.io/creating-quarto-websites/.\nCreating a website link: https://quarto.org/docs/websites/.\n\nEstablish an order: Once we have finished and published a first article, everything will be simpler in technical terms since you will discover that there are multiple reference sources available."
  },
  {
    "objectID": "blog/about-this-website/about-this-website.html#la-idea",
    "href": "blog/about-this-website/about-this-website.html#la-idea",
    "title": "Developing Beneath the surface",
    "section": "La idea",
    "text": "La idea\nLo primero que llegó a mi mente fue «¿de qué manera puedo desarrollar una página en que pueda dejar como referencia para aquellos que quisieran contactar conmigo en un ambiente profesional?» y «¿desde qué medio puedo compartir aquellas ideas, pequeños trabajos o experiencias personales que creo que podrían resultar de utilidad para otros profesionales en mi rubro?». Bueno, existen muchas opciones alrededor (redes sociales, podcast, TikTok, etc.). Esta primera decisión no fue difícil, pues no me caracterizo particularmente por mi carisma en redes, así que decidí optar por escribir un blog. Sin embargo, aquí la toma de decisiones sí se complicó un poco, pues existen muchas plataformas disponibles: Wordpress, Netlify, Gitlab pages, Medium, entre others. Cada una plantea ventajas y potencialidades distintas, pero mi decisión se basó sobre todo en la familiaridad de uso de las plataformas Github y Quarto. Me decidí por Github pages."
  },
  {
    "objectID": "blog/about-this-website/about-this-website.html#github-pages-1",
    "href": "blog/about-this-website/about-this-website.html#github-pages-1",
    "title": "Developing Beneath the surface",
    "section": "Github pages",
    "text": "Github pages\nGithub pages es un servicio gratuito de alojamiento de sitios web estáticos que permite publicar contenido HTML directamente desde un repositorio de GitHub. Esta plataforma ofrece múltiples ventajas:\n\nGratuito: No necesitas pagar por un servicio de alojamiento web, solo tener una cuenta de GitHub (gratuita).\nFácil de usar: Subir tus archivos HTML, CSS y JavaScript a GitHub es muy sencillo.\nIntegración directa con GitHub: Esto se hace MUY importante si ya usas GitHub (como fue mi caso) para tus proyectos de código.\nVersionado: GitHub Pages guarda un historial de todos los cambios que realices en tu sitio web, por lo que si algo sale mal siempre puedes volver a una versión anterior de tu repositorio (página).\nSeguro: GitHub Pages utiliza HTTPS para proteger tu sitio web.\nRápido: Desde hace unos años, Microsoft compró GitHub y por tanto sus servicios utilizan una extensa red global de servidores para entregar tu sitio web a los usuarios de todo el mundo.\nEscalable: GitHub Pages puede manejar cualquier cantidad de tráfico, por lo que tu sitio web puede crecer sin problemas. Aunque de un blog personal/profesional no se espera tener picos de tráfico muy altos, siempre es bueno saber que existe este respaldo.\nOptimizado para SEO: GitHub Pages está optimizado para los motores de búsqueda, lo que ayudará a que nuestro sitio web aparezca en los resultados de los principales buscadores web.\n\nAl final, Github pages fue la opción de alojamiento que me resultó más atractiva. Sin embargo, existen múltiples maneras de subir contenido, desde diferentes plataformas de desarrollo que involucran el uso de lenguajes de programación (e.g. Javascript) o de marcado, como markdown o Quarto. Una vez más, mi experiencia histórica pesó más y me decanté por el uso de Quarto."
  },
  {
    "objectID": "blog/about-this-website/about-this-website.html#quarto-1",
    "href": "blog/about-this-website/about-this-website.html#quarto-1",
    "title": "Developing Beneath the surface",
    "section": "Quarto",
    "text": "Quarto\nQuarto es una plataforma de publicación de documentos científicos de código abierto desarrollada por el equipo de POSIT (ex RStudio). Se basa en el formato R Markdown y lo amplía con nuevas características y funcionalidades para crear documentos más ricos e interactivos. Implementa un sistema de preprocesamiento más potente que R Markdown y soporta lenguajes de programación adicionales como Python y Julia, ampliando las posibilidades de análisis y visualización.\nDesde hace unos pocos años, he venido utilizando Quarto no solo para la redacción de reportes sencillos en R, sino inclusive para la composición completa de artículos científicos (uno de ellos con formato sometido directamente desde la salida en .docx obtenida en Quarto), así como el desarrollo de webs interactivas a través de la dupla Quarto-Shiny."
  },
  {
    "objectID": "blog/about-this-website/about-this-website.html#el-contenido",
    "href": "blog/about-this-website/about-this-website.html#el-contenido",
    "title": "Developing Beneath the surface",
    "section": "El contenido",
    "text": "El contenido\nNo tuve que empezar desde cero. Afortunadamente, hay mucho material allá afuera, pero resumiré brevemente los principales links que utilicé:\n\nCrear la website alojada en Github pages, preparaela para el manejo de contenido con Quarto y para trabajar desde RStudio: Los primeros pasos a seguir están muy bien explicados en el vídeo de Melissa Van Bussel (link). Muy recomendable, aunque parte bajo el supuesto de que conocemos cómo manejar Git-bash y de que tenemos bien configurado un token para nuestra PC. Estos últimos detalles los colocaré al final de este artículo.\n\n\n\nEstablecer un esquema de lo que vamos a publicar. Una vez que hayamos logrado configurar correctamente nuestra web, sigue el turno de tomar lápiz y papel y esquematizar qué contenido deseamos compartir y cuál será la lógica para ordenar dicho contenido en secciones. Si bien esta parte es muy personal, ya que no será lo mismo diagramar una página que solo tiene como objetivo servir de referencia profesional (es decir, un CV interactivo) a la de un freelancer que desea mostrar sus principales proyectos y/o servicios ofrecidos, no necesitas ir desde cero tampoco. Puedes revisar ejemplos de páginas de otros creadores (investigadores, reporteros, bloggers, artistas gráficos, etc.) e inspirarte en sus diseños. Así también, puedes revisar ejemplos de estructuras de páginas que usan Github pages (link). Recuerda, todo debe partir SIEMPRE del tipo de contenido que planeas colocar.\nEmpezar a escribir. OK, esto no es un artículo científico y hay mucha más libertad para rellenar las distintas secciones; no obstante, recuerda siempre tener en cuenta los criterios básicos de redacción (de lo general a lo específico), ser claro y cuidadoso al elegir el tipo de lenguaje (con base en el tipo de público que esperas que te lea) y, una vez más, revisar ejemplos. Por supuesto, en estos días las plataformas de IA para generación de texto pueden resultar de gran ayuda, pero no debemos delegarles toda la carga (i.e. nada de copiar-pegar) sin antes leer corroborar la información que nos devuelven. En este punto, me fueron de mucha utilidad los siguientes artículos:\n\nCrear tu website con Quarto: tutorial completo y plantilla link.\nCreando tu website personal con Quarto link.\nCreando un website link.\n\nEstablecer un orden. Una vez que hayamos culminado y publicado un primer artículo, todo irá siendo más simple en términos técnicos ya que descubrirás que existen múltiples fuentes de referencia disponibles."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Wencheng Lau-Medrano",
    "section": "",
    "text": "Note\n\n\n\nOne surface, dos idiomas.\nHere you will find content in two languages: English (EN) and Spanish (ES). Each piece of content will be available in both languages.\nEn esta página encontrarás contenido en dos idiomas: inglés (EN) y español (ES). Cada sección estará disponible en ambos idiomas.\n\n\n\n[EN] Beneath the surface 🌊\nHi there! I’m (Luis) Wencheng Lau-Medrano, a passionate enthusiast of technology, marine biology, data analysis, Legos, and travel. Here I will share some of what I know, have learned, and experienced in those fields. You will find everything from practical tips to improve your programming and data analysis skills to recommendations for tourist destinations and guides for administrative procedures. Thank you for being a part of this journey of learning and discovery.\nBelow are my main networks and ways to contact me. Feel free to send me a message about any of the contents.\nImage credits: Dan Grinwis at Unplash\n\n\n[ES] Bajo la superficie 🌊\n¡Hola, qué tal! Soy (Luis) Wencheng Lau-Medrano, un apasionado de la tecnología, la biología marina, el análisis de datos, los Legos y los viajes. Aquí compartiré un poco de lo que sé, aprendí y experimenté en esos campos. Encontrarás desde consejos prácticos para mejorar tus habilidades en programación y análisis de datos, hasta recomendaciones de destinos turísticos y guías para realizar trámites administrativos. Gracias por ser ahora parte de ese viaje de aprendizaje y descubrimiento.\nAbajo están mis principales redes y formas de contacto. No dudes en enviarme un mensaje acerca de cualquiera de los contenidos.\nCréditos de la imagen: Dan Grinwis en Unplash"
  }
]